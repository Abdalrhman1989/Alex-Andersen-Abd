@model IEnumerable<AAO_App.Models.Availability>

@{
    ViewData["Title"] = "Rådighedkalendar";
    Layout = "_Master";
}

<div class="calendar_container">
    <div class="headingtext">
        <h1>Rådighedskalendar</h1>
    </div>
    <div class="type">
        <div class="leftred">
            <button class="red"></button>Optaget
        </div>
        <div class="rightgreen">
            <button class="green"></button>Ledig
        </div>
        <div class="create">
            <a asp-action="Create"><i style="font-size:18px" class="fa">&#xf055;</i>Opret</a>
        </div>
    </div>

    <div class="calendar">
        <div class="month">
            <i style="font-size:24px" class="fa prev">&#xf104;</i>
            <div class="date">
                <h2></h2>
                <p></p>
            </div>
            <i style="font-size:24px" class="fa next">&#xf105;</i>
        </div>
        <div class="weekdays">
            <div>Sø</div>
            <div>Ma</div>
            <div>Ti</div>
            <div>On</div>
            <div>To</div>
            <div>Fr</div>
            <div>Lø</div>
        </div>
        <div class="days">

        </div>
    </div>
</div>

<table class="table_container">
    <thead>       
        <tr>         
            <th>
                @Html.DisplayNameFor(model => model.Start)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.End)
            </th>
            <th>
                Ændringer
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {

        <tr>
            <td>
                @item.Start.ToString("dd/MM/yyyy")
            </td>
            <td>
                @item.End.ToString("dd/MM/yyyy")
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="item.AvailabilityId">Edit</a> |
                <a asp-action="Details" asp-route-id="item.AvailabilityId">Details</a> |
                <a asp-action="Delete" asp-route-id="item.AvailabilityId">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>

<script>

    const date = new Date();

    const markDateList = [];

    markDateList.push(new Date(2021, 11, 09).getTime());
    markDateList.push(new Date(2021, 11, 10).getTime());






    const renderCalendar = () => {
        date.setDate(1);

        const monthDays = document.querySelector(".days");

        const lastDay = new Date(
            date.getFullYear(),
            date.getMonth() + 1,
            0
        ).getDate();

        const prevLastDay = new Date(
            date.getFullYear(),
            date.getMonth(),
            0
        ).getDate();

        const firstDayIndex = date.getDay();

        //getting fullyear + month
        const lastDayIndex = new Date(
            date.getFullYear(),
            date.getMonth() + 1,
            0
        ).getDay();

        const nextDays = 7 - lastDayIndex - 1;

        const months = [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
        ];

        document.querySelector(".date h2").innerHTML = months[date.getMonth()];

        document.querySelector(".date p").innerHTML = new Date().toDateString();

        let days = "";

        for (let x = firstDayIndex; x > 0; x--) {
            days += `<div class="prev-date">${prevLastDay - x + 1}</div>`;
        }

        for (let i = 1; i <= lastDay; i++) {
            if (
                i === new Date().getDate() &&
                date.getMonth() === new Date().getMonth()
            ) {
                days += `<div class="today">${i}</div>`;
            } else if (markDateList.includes(new Date(date.getYear() + 1900, date.getMonth(), i).getTime())) {
                days += `<div class="today">${i}</div>`;
            }
            else{
                days += `<div>${i}</div>`;
            }
        }

        for (let j = 1; j <= nextDays; j++) {
            days += `<div class="next-date">${j}</div>`;
            monthDays.innerHTML = days;
        }
    };
    // previous arrow
    document.querySelector(".prev").addEventListener("click", () => {
        date.setMonth(date.getMonth() - 1);
        renderCalendar();
    });
    // next arrow
    document.querySelector(".next").addEventListener("click", () => {
        date.setMonth(date.getMonth() + 1);
        renderCalendar();
    });

    renderCalendar();

    window.setInterval(function () {
        var elem = document.getElementsByClassName('table_container');
        elem.scrollTop = elem.scrollHeight;
    }, 5000);</script>